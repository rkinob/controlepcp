# GitHub Action corrigido para copiar apenas os arquivos do build
# (sem incluir o diretório build)

- name: Copiar arquivos via SCP
  uses: appleboy/scp-action@v0.1.4
  with:
    host: ${{ secrets.VPS_HOST }}
    username: ${{ secrets.VPS_USER }}
    key: ${{ secrets.VPS_SSH_KEY }}
    source: "dist/controle-pcp/*"  # ← CORREÇÃO: usar dist/controle-pcp/*
    target: "/var/www/controlepcp.kgsistemas.com.br/public_html"
    recursive: true

# ALTERNATIVA 1: Usar strip_components (se disponível)
- name: Copiar arquivos via SCP (Alternativa 1)
  uses: appleboy/scp-action@v0.1.4
  with:
    host: ${{ secrets.VPS_HOST }}
    username: ${{ secrets.VPS_USER }}
    key: ${{ secrets.VPS_SSH_KEY }}
    source: "dist/controle-pcp/"
    target: "/var/www/controlepcp.kgsistemas.com.br/public_html"
    recursive: true
    strip_components: 1  # Remove o primeiro nível de diretório

# ALTERNATIVA 2: Usar rsync (mais controle)
- name: Copiar arquivos via rsync
  uses: burnett01/rsync-deployments@6.0.0
  with:
    switches: -avzr --delete
    path: dist/controle-pcp/
    remote_path: /var/www/controlepcp.kgsistemas.com.br/public_html/
    remote_host: ${{ secrets.VPS_HOST }}
    remote_user: ${{ secrets.VPS_USER }}
    remote_key: ${{ secrets.VPS_SSH_KEY }}

# ALTERNATIVA 3: Usar script personalizado
- name: Preparar arquivos para deploy
  run: |
    # Criar diretório temporário
    mkdir -p deploy_temp

    # Copiar conteúdo do build para diretório temporário
    cp -r dist/controle-pcp/* deploy_temp/

    # Verificar estrutura
    ls -la deploy_temp/

- name: Copiar arquivos preparados
  uses: appleboy/scp-action@v0.1.4
  with:
    host: ${{ secrets.VPS_HOST }}
    username: ${{ secrets.VPS_USER }}
    key: ${{ secrets.VPS_SSH_KEY }}
    source: "deploy_temp/*"
    target: "/var/www/controlepcp.kgsistemas.com.br/public_html"
    recursive: true

- name: Limpar arquivos temporários
  run: rm -rf deploy_temp
